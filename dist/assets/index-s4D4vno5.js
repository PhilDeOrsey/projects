(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))r(i);new MutationObserver(i=>{for(const s of i)if(s.type==="childList")for(const o of s.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&r(o)}).observe(document,{childList:!0,subtree:!0});function e(i){const s={};return i.integrity&&(s.integrity=i.integrity),i.referrerPolicy&&(s.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?s.credentials="include":i.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function r(i){if(i.ep)return;i.ep=!0;const s=e(i);fetch(i.href,s)}})();function it(n=10){return Math.random().toString(36).substr(2,n)}function j(n,t){return new Array(t).fill(n)}function st(n,t,e){const r=[];for(let i=0;i<t;++i)r.push(j(n,e));return r}function ot(n,t,e){const r=[];for(let i=0;i<t;++i){const s=[];for(let o=0;o<e;++o)s.push(n(i,o));r.push(s)}return r}function ct(n,t,e=1){const r=[];if(n>=0)for(let i=0;i<n;i+=e)r.push(i);else for(let i=0;i>n;i-=e)r.push(i);return r}function w(n){return n.reduce((t,e)=>t+e,0)}var ht=Object.defineProperty,v=(n,t)=>{for(var e in t)ht(n,e,{get:t[e],enumerable:!0})},I=1e-6;function f(n,t,e=I){return isNaN(n)||isNaN(t)?!1:Math.abs(n-t)<e}function P(n,t,e,r=I){return t>e&&([t,e]=[e,t]),n>t+r&&n<e-r}function q(n,t=1){return Math.round(n/t)*t}function x(n,t=-1/0,e=1/0){return Math.min(e,Math.max(t,n))}function A(n,t,e=.5){return n+(t-n)*e}function L(n){return n*n}function at(n,t){return(n%t+t)%t}var ut={};v(ut,{determinant:()=>dt,fill:()=>T,identity:()=>N,inverse:()=>Y,product:()=>M,reflection:()=>pt,rotation:()=>lt,scalarProduct:()=>gt,shear:()=>ft,sum:()=>F,transpose:()=>O});function T(n,t,e){return st(n,t,e)}function N(n=2){const t=T(0,n,n);for(let e=0;e<n;++e)t[e][e]=1;return t}function lt(n){const t=Math.sin(n),e=Math.cos(n);return[[e,-t],[t,e]]}function ft(n){return[[1,n],[0,1]]}function pt(n){const t=Math.sin(2*n),e=Math.cos(2*n);return[[e,t],[t,-e]]}function F(...n){const[t,...e]=n,r=e.length>1?F(...e):e[0];if(t.length!==r.length||t[0].length!==r[0].length)throw new Error("Matrix sizes don’t match");const i=[];for(let s=0;s<t.length;++s){const o=[];for(let c=0;c<t[s].length;++c)o.push(t[s][c]+r[s][c]);i.push(o)}return i}function gt(n,t){return n.map(e=>e.map(r=>r*t))}function M(...n){const[t,...e]=n,r=e.length>1?M(...e):e[0];if(t[0].length!==r.length)throw new Error("Matrix sizes don’t match.");const i=[];for(let s=0;s<t.length;++s){const o=[];for(let c=0;c<r[0].length;++c){let h=0;for(let a=0;a<r.length;++a)h+=t[s][a]*r[a][c];o.push(h)}i.push(o)}return i}function O(n){const t=[];for(let e=0;e<n[0].length;++e){const r=[];for(let i=0;i<n.length;++i)r.push(n[i][e]);t.push(r)}return t}function dt(n){if(n.length!==n[0].length)throw new Error("Not a square matrix.");const t=n.length;if(t===1)return n[0][0];if(t===2)return n[0][0]*n[1][1]-n[0][1]*n[1][0];let e=0;for(let r=0;r<t;++r){let i=n[0][r],s=n[0][r];for(let o=1;o<t;++o)s*=n[o][(r+o)%t],i*=n[o][(r-o+t)%t];e+=s-i}return e}function Y(n){const t=n.length;if(t!==n[0].length)throw new Error("Not a square matrix.");const e=N(t),r=ot((i,s)=>n[i][s],t,t);for(let i=0;i<t;++i){let s=r[i][i];if(f(s,0)){for(let o=i+1;o<t;++o)if(r[o][i]!==0){for(let c=0;c<t;++c)[r[o][c],r[i][c]]=[r[i][c],r[o][c]],[e[o][c],e[i][c]]=[e[i][c],e[o][c]];break}if(s=r[i][i],f(s,0))throw new Error("Matrix not invertible.")}for(let o=0;o<t;++o)r[i][o]=r[i][o]/s,e[i][o]=e[i][o]/s;for(let o=0;o<t;++o){if(o===i)continue;const c=r[o][i];for(let h=0;h<t;++h)r[o][h]-=c*r[i][h],e[o][h]-=c*e[i][h]}}return e}var b={};v(b,{bernoulli:()=>C,binomial:()=>wt,cauchy:()=>At,chiCDF:()=>$t,exponential:()=>Pt,find:()=>xt,geometric:()=>qt,integer:()=>mt,integrate:()=>V,normal:()=>vt,normalPDF:()=>Lt,poisson:()=>bt,shuffle:()=>yt,smart:()=>Mt,uniform:()=>St,weighted:()=>R});function yt(n){n=n.slice(0);for(let t=n.length-1;t>0;--t){const e=Math.floor(Math.random()*(t+1));[n[t],n[e]]=[n[e],n[t]]}return n}function mt(n,t){const e=t===void 0?0:n,r=t===void 0?n:t-n+1;return e+Math.floor(r*Math.random())}function R(n){const t=Math.random()*w(n);let e=0;return n.findIndex(r=>(e+=r)>=t)}function xt(n){return n[Math.floor(n.length*Math.random())]}var y=new Map;function Mt(n,t){t||(t=it()),y.has(t)||y.set(t,j(1,n));const e=y.get(t),r=R(e.map(i=>i*i));return e[r]-=1,e[r]<=0&&y.set(t,e.map(i=>i+1)),r}function C(n=.5){return Math.random()<n?1:0}function wt(n=1,t=.5){let e=0;for(let r=0;r<n;++r)e+=C(t);return e}function bt(n=1){if(n<=0)return 0;const t=Math.exp(-n);let e=1,r=0;for(;e>t;++r)e*=Math.random();return r-1}function St(n=0,t=1){return n+(t-n)*Math.random()}function vt(n=0,t=1){const e=Math.random(),r=Math.random();return Math.sqrt(-2*Math.log(e))*Math.cos(2*Math.PI*r)*Math.sqrt(t)+n}function Pt(n=1){return n<=0?0:-Math.log(Math.random())/n}function qt(n=.5){if(!(n<=0||n>1))return Math.floor(Math.log(Math.random())/Math.log(1-n))}function At(){let n,t,e;do t=2*Math.random()-1,e=2*Math.random()-1,n=t*t+e*e;while(n>=1);return t/e}function Lt(n,t=1,e=0){return Math.exp(-((n-t)**2)/(2*e))/Math.sqrt(2*Math.PI*e)}var $=7,E=[.9999999999998099,676.5203681218851,-1259.1392167224028,771.3234287776531,-176.6150291621406,12.507343278686905,-.13857109526572012,9984369578019572e-21,15056327351493116e-23];function B(n){if(n<.5)return Math.PI/(Math.sin(Math.PI*n)*B(1-n));n-=1;let t=E[0];for(let r=1;r<$+2;r++)t+=E[r]/(n+r);const e=n+$+.5;return Math.sqrt(2*Math.PI)*Math.pow(e,n+.5)*Math.exp(-e)*t}function V(n,t,e,r=1){let i=0;for(let s=t;s<e;s+=r)i+=n(s)*r||0;return i}function $t(n,t){return 1-V(r=>Math.pow(r,(t-2)/2)*Math.exp(-r/2),0,n)/Math.pow(2,t/2)/B(t/2)}var Et={};v(Et,{bestPolynomial:()=>Ft,coefficient:()=>W,exponential:()=>It,linear:()=>jt,logarithmic:()=>Tt,polynomial:()=>G,power:()=>Nt});function Xt(n,t){let e=1,r=n[0];for(let i=1;i<n.length;++i)e*=t,r+=e*n[i];return r}function jt(n,t=!1){let e=0,r=0,i=0,s=0;const o=n.length;for(let a=0;a<o;a++)e+=n[a][0],r+=n[a][1],i+=n[a][0]*n[a][0],s+=n[a][0]*n[a][1];if(t)return[0,s/i];const c=(o*s-e*r)/(o*i-e*e);return[r/o-c*e/o,c]}function It(n){const t=[0,0,0,0,0,0];for(const s of n)t[0]+=s[0],t[1]+=s[1],t[2]+=s[0]*s[0]*s[1],t[3]+=s[1]*Math.log(s[1]),t[4]+=s[0]*s[1]*Math.log(s[1]),t[5]+=s[0]*s[1];const e=t[1]*t[2]-t[5]*t[5],r=Math.exp((t[2]*t[3]-t[5]*t[4])/e),i=(t[1]*t[4]-t[5]*t[3])/e;return[r,i]}function Tt(n){const t=[0,0,0,0],e=n.length;for(const s of n)t[0]+=Math.log(s[0]),t[1]+=s[1]*Math.log(s[0]),t[2]+=s[1],t[3]+=Math.pow(Math.log(s[0]),2);const r=(e*t[1]-t[2]*t[0])/(e*t[3]-t[0]*t[0]);return[(t[2]-r*t[0])/e,r]}function Nt(n){const t=[0,0,0,0],e=n.length;for(const s of n)t[0]+=Math.log(s[0]),t[1]+=Math.log(s[1])*Math.log(s[0]),t[2]+=Math.log(s[1]),t[3]+=Math.pow(Math.log(s[0]),2);const r=(e*t[1]-t[2]*t[0])/(e*t[3]-t[0]*t[0]);return[Math.exp((t[2]-r*t[0])/e),r]}function G(n,t=2){const e=n.map(h=>ct(t+1).map(a=>Math.pow(h[0],a))),r=O(e),i=n.map(h=>[h[1]]),s=M(r,e),o=Y(s);return M(o,r,i).map(h=>h[0])}function W(n,t){const r=n.reduce((o,c)=>o+c[1],0)/n.length,i=n.reduce((o,c)=>o+(c[1]-r)**2,0);return 1-n.reduce((o,c)=>o+(c[1]-t(c[0]))**2,0)/i}function Ft(n,t=.85,e=8){if(!(n.length<=1))for(let r=1;r<e;++r){const i=G(n,r),s=c=>Xt(i,c);if(W(n,s)>=t)return{order:r,coefficients:i,fn:s}}}var Ot=2*Math.PI;function H(n,t){const e=Math.atan2(n.y-(t?t.y:0),n.x-(t?t.x:0));return at(e,Ot)}var l=class u{constructor(t=0,e=0){this.x=t,this.y=e,this.type="point"}get unitVector(){return f(this.length,0)?new u(1,0):this.scale(1/this.length)}get length(){return Math.sqrt(this.x**2+this.y**2)}get inverse(){return new u(-this.x,-this.y)}get flip(){return new u(this.y,this.x)}get perpendicular(){return new u(-this.y,this.x)}get array(){return[this.x,this.y]}distanceFromLine(t){return u.distance(this,t.project(this))}clamp(t,e=0){const r=x(this.x,t.xMin+e,t.xMax-e),i=x(this.y,t.yMin+e,t.yMax-e);return new u(r,i)}changeCoordinates(t,e){const r=e.xMin+(this.x-t.xMin)/t.dx*e.dx,i=e.yMin+(this.y-t.yMin)/t.dy*e.dy;return new u(r,i)}add(t){return u.sum(this,t)}subtract(t){return u.difference(this,t)}round(t=1){return new u(q(this.x,t),q(this.y,t))}floor(){return new u(Math.floor(this.x),Math.floor(this.y))}mod(t,e=t){return new u(this.x%t,this.y%e)}angle(t=S){return H(this,t)}snap(t,e=5){return f(this.x,t.x,e)?new u(t.x,this.y):f(this.y,t.y,e)?new u(this.x,t.y):this}static average(...t){const e=w(t.map(i=>i.x))/t.length,r=w(t.map(i=>i.y))/t.length;return new u(e,r)}static dot(t,e){return t.x*e.x+t.y*e.y}static sum(t,e){return new u(t.x+e.x,t.y+e.y)}static difference(t,e){return new u(t.x-e.x,t.y-e.y)}static distance(t,e){return Math.sqrt(L(t.x-e.x)+L(t.y-e.y))}static manhattan(t,e){return Math.abs(t.x-e.x)+Math.abs(t.y-e.y)}static interpolate(t,e,r=.5){return new u(A(t.x,e.x,r),A(t.y,e.y,r))}static interpolateList(t,e=.5){const r=t.length-1,i=Math.floor(x(e,0,1)*r);return u.interpolate(t[i],t[i+1],r*e-i)}static fromPolar(t,e=1){return new u(e*Math.cos(t),e*Math.sin(t))}static random(t){const e=b.uniform(t.xMin,t.xMax),r=b.uniform(t.yMin,t.yMax);return new u(e,r)}static equals(t,e,r){return f(t.x,e.x,r)&&f(t.y,e.y,r)}static colinear(t,e,r,i){const s=t.x-e.x,o=t.y-e.y,c=e.x-r.x,h=e.y-r.y;return f(s*h,c*o,i)}transform(t){const e=t[0][0]*this.x+t[0][1]*this.y+t[0][2],r=t[1][0]*this.x+t[1][1]*this.y+t[1][2];return new u(e,r)}rotate(t,e=S){if(f(t,0))return this;const r=this.x-e.x,i=this.y-e.y,s=Math.cos(t),o=Math.sin(t),c=r*s-i*o+e.x,h=r*o+i*s+e.y;return new u(c,h)}reflect(t){const e=t.p2.x-t.p1.x,r=t.p2.y-t.p1.y,i=this.x-t.p1.x,s=this.y-t.p1.y,o=(e*s-r*i)/(e*e+r*r),c=this.x+2*o*r,h=this.y-2*o*e;return new u(c,h)}scale(t,e=t){return new u(this.x*t,this.y*e)}shift(t,e=t){return new u(this.x+t,this.y+e)}translate(t){return this.shift(t.x,t.y)}equals(t,e){return u.equals(this,t,e)}toString(){return`point(${this.x},${this.y})`}},S=new l(0,0);function Yt(n){return n.type==="ray"}function Rt(n){return n.type==="segment"}var g=class d{constructor(t,e){this.p1=t,this.p2=e,this.type="line"}get length(){return l.distance(this.p1,this.p2)}get lengthSquared(){return(this.p1.x-this.p2.x)**2+(this.p1.y-this.p2.y)**2}get midpoint(){return l.average(this.p1,this.p2)}get slope(){return(this.p2.y-this.p1.y)/(this.p2.x-this.p1.x)}get intercept(){return this.p1.y-this.slope*this.p1.x}get angle(){return H(this.p2,this.p1)}get unitVector(){return this.p2.subtract(this.p1).unitVector}get perpendicularVector(){return new l(this.p2.y-this.p1.y,this.p1.x-this.p2.x).unitVector}parallel(t){return new d(t,t.add(this.p2).subtract(this.p1))}perpendicular(t){const e=this.line.project(t);return l.equals(t,e)?new d(e,e.add(this.perpendicularVector.scale(this.length/2))):new d(e,t)}get perpendicularBisector(){return this.perpendicular(this.midpoint)}distanceSquared(t){const e=this.project(t);return(t.x-e.x)**2+(t.y-e.y)**2}get line(){return this.type==="line"?this:new d(this.p1,this.p2)}get ray(){return Yt(this)?this:new Ct(this.p1,this.p2)}get segment(){return Rt(this)?this:new Bt(this.p1,this.p2)}offset(t){const e=l.difference(this.p2,this.p1),r=l.difference(t,this.p1);return l.dot(e,r)/this.lengthSquared}project(t){return this.at(this.offset(t))}side(t,e){const r=l.difference(this.p2,this.p1),i=l.difference(t,this.p1),s=i.x*r.y-i.y*r.x;return f(s,0,e)?0:Math.sign(s)}contains(t,e){return this.side(t,e)===0}at(t){return l.interpolate(this.p1,this.p2,t)}transform(t){return new this.constructor(this.p1.transform(t),this.p2.transform(t))}rotate(t,e=S){return f(t,0)?this:new this.constructor(this.p1.rotate(t,e),this.p2.rotate(t,e))}reflect(t){return new this.constructor(this.p1.reflect(t),this.p2.reflect(t))}scale(t,e=t){return new this.constructor(this.p1.scale(t,e),this.p2.scale(t,e))}shift(t,e=t){return new this.constructor(this.p1.shift(t,e),this.p2.shift(t,e))}translate(t){return this.shift(t.x,t.y)}equals(t,e){return this.contains(t.p1,e)&&this.contains(t.p2,e)}toString(){return`line(${this.p1},${this.p2})`}},Ct=class extends g{constructor(){super(...arguments),this.type="ray"}equals(n,t){return n.type!=="ray"||!this.p1.equals(n.p1,t)?!1:this.p2.equals(n.p2,t)?!0:n.contains(this.p2,t)||this.contains(n.p2,t)}contains(n,t){if(!super.contains(n,t))return!1;const e=this.offset(n);return f(e,0,t)||e>0}toString(){return`ray(${this.p1},${this.p2})`}},Bt=class U extends g{constructor(){super(...arguments),this.type="segment"}contains(t,e){return super.contains(t,e)?this.p1.equals(t,e)||this.p2.equals(t,e)?!0:f(this.p1.x,this.p2.x,e)?P(t.y,this.p1.y,this.p2.y):P(t.x,this.p1.x,this.p2.x):!1}project(t){const e=l.difference(this.p2,this.p1),r=l.difference(t,this.p1),i=x(l.dot(e,r)/this.lengthSquared,0,1);return this.p1.add(e.scale(i))}contract(t){return new U(this.at(t),this.at(1-t))}equals(t,e,r=!1){return t.type!=="segment"?!1:this.p1.equals(t.p1,e)&&this.p2.equals(t.p2,e)||!r&&this.p1.equals(t.p2,e)&&this.p2.equals(t.p1,e)}toString(){return`segment(${this.p1},${this.p2})`}};const m=n=>n.split(" ").map(e=>{const[r,i]=e.split(",").map(Number);return new l(r,i)}),X=n=>n.map(t=>`${t.x},${t.y}`).join(" ");class Vt{constructor(t){this.isDragging=!1,this.currentShape=null,this.currentShapeType=null,this.offsetX=0,this.offsetY=0,this.mirrorLines=[],this.imageMap=new Map,this.config=t,this.setupMirrors(),this.initializeShapes(),this.bindEvents()}createShape(t){const e=document.createElementNS("http://www.w3.org/2000/svg",t.type);return Object.entries(t.attributes).forEach(([r,i])=>{e.setAttribute(r,i.toString())}),e.setAttribute("data-shape-id",t.id),e.setAttribute("data-shape-type",t.type),e.setAttribute("data-draggable",t.draggable?"true":"false"),e.setAttribute("role","graphics-symbol"),e.setAttribute("aria-label",`${t.draggable?"Draggable ":""}${t.type}`),t.draggable&&(e.style.cursor="grab"),e}initializeShapes(){const{svg:t,shapes:e,bounds:r}=this.config;t.innerHTML="",[{id:"room-boundary",type:"path",attributes:{d:`M ${r.x},${r.y} 
           L ${r.x+r.width},${r.y} 
           L ${r.x+r.width},${r.y+r.height} 
           L ${r.x},${r.y+r.height} 
           Z`,fill:"none",stroke:"#cccccc",strokeWidth:"2"},draggable:!1},...e].forEach(o=>{const c=this.createShape(o);if(o.type==="circle"){const h=this.reflectCircle(c,this.mirrorLines[1]),a=this.createShape({id:o.id,type:"circle",attributes:{cx:h.x,cy:h.y,r:o.attributes.r,fill:"gray"},draggable:!1});t.appendChild(a),this.imageMap.set(o.id,[...this.imageMap.get(o.id)||[],a])}else{const h=this.reflectPolygon(c,this.mirrorLines[1])||"",a=this.createShape({id:o.id,type:"polygon",attributes:{points:h,fill:"gray"},draggable:!1});t.appendChild(a),this.imageMap.set(o.id,[...this.imageMap.get(o.id)||[],a])}t.appendChild(c)})}bindEvents(){this.config.svg.addEventListener("mousedown",this.onMouseDown.bind(this)),window.addEventListener("mousemove",this.onMouseMove.bind(this)),window.addEventListener("mouseup",this.onMouseUp.bind(this))}setupMirrors(){const{mirrorLocation:t,bounds:e,svg:r}=this.config;if(!t)return;const i=new l(e.x,e.y),s=new l(e.x+e.width,e.y),o=new l(e.x+e.width,e.y+e.height),c=new l(e.x,e.y+e.height);if(["top-bottom","all"].includes(t)){const h=new g(i,s),a=new g(c,o);this.mirrorLines.push(h,a),this.drawMirror(h,"MirrorTop"),this.drawMirror(a,"MirrorBot")}if(["left-right","all"].includes(t)){const h=new g(i,c),a=new g(s,o);this.mirrorLines.push(h,a),this.drawMirror(h,"MirrorLeft"),this.drawMirror(a,"MirrorRight")}}drawMirror(t,e){const[r,i]=[t.p1,t.p2];this.config.svg.append(this.createShape({id:e,type:"path",attributes:{d:`M ${r.x},${r.y} L ${i.x},${i.y}`,fill:"none",stroke:"blue",strokeWidth:"6"},draggable:!1}))}onMouseDown(t){const e=t.target;if(!e||!(e instanceof SVGGraphicsElement)||!(e.getAttribute("data-draggable")==="true"))return;const i=e.getAttribute("data-shape-type");if(!i)return;this.isDragging=!0,this.currentShape=e,this.currentShapeType=i,this.currentShape.style.cursor="grabbing";const s=this.config.svg.getBoundingClientRect();if(i==="circle"){const o=parseFloat(e.getAttribute("cx")||"0"),c=parseFloat(e.getAttribute("cy")||"0");this.offsetX=t.clientX-s.left-o,this.offsetY=t.clientY-s.top-c}else{const o=parseFloat(m(e.getAttribute("points"))[0].x.toString()),c=parseFloat(m(e.getAttribute("points"))[0].y.toString());this.offsetX=t.clientX-s.left-o,this.offsetY=t.clientY-s.top-c}}onMouseMove(t){if(!this.isDragging||!this.currentShape||!this.currentShapeType)return;const e=this.config.svg.getBoundingClientRect(),r=this.config.bounds;let i=t.clientX-e.left-this.offsetX,s=t.clientY-e.top-this.offsetY;if(this.currentShapeType==="circle"){const o=parseFloat(this.currentShape.getAttribute("r")||"0");i=Math.max(r.x+o,Math.min(i,r.x+r.width-o)),s=Math.max(r.y+o,Math.min(s,r.y+r.height-o)),this.currentShape.setAttribute("cx",i.toString()),this.currentShape.setAttribute("cy",s.toString());const c=this.imageMap.get(this.currentShape.getAttribute("data-shape-id"));for(const h of c||[]){const a=this.reflectCircle(this.currentShape,this.mirrorLines[1]);h.setAttribute("cx",a.x.toString()),h.setAttribute("cy",a.y.toString())}}else if(this.currentShapeType==="polygon"){const o=this.currentShape.getAttribute("points");if(!o)return;const c=m(o),h=Math.min(...c.map(p=>p.x)),a=Math.min(...c.map(p=>p.y)),k=Math.max(...c.map(p=>p.x)),D=Math.max(...c.map(p=>p.y)),K=k-h,Z=D-a,z=Math.max(r.x,Math.min(i,r.x+r.width-K)),J=Math.max(r.y,Math.min(s,r.y+r.height-Z)),Q=z-h,_=J-a,tt=c.map(p=>new l(p.x+Q,p.y+_)),et=X(tt);this.currentShape.setAttribute("points",et);const nt=this.imageMap.get(this.currentShape.getAttribute("data-shape-id"));for(const p of nt||[]){const rt=this.reflectPolygon(this.currentShape,this.mirrorLines[1]);p.setAttribute("points",rt)}}}getShapeSize(t){const e=t.getBBox();return{width:e.width,height:e.height}}onMouseUp(){this.currentShape&&(this.currentShape.style.cursor="grab"),this.isDragging=!1,this.currentShape=null,this.currentShapeType=null}reflectCircle(t,e){if(t.getAttribute("data-shape-type")!=="circle")return;const r=parseFloat(t.getAttribute("cx")||"0"),i=parseFloat(t.getAttribute("cy")||"0");return new l(r,i).reflect(e)}reflectPolygon(t,e){if(t.getAttribute("data-shape-type")!=="polygon")return;const i=m(t.getAttribute("points")).map(s=>s.reflect(e));return X(i)}updateShapes(t){this.config.shapes=t,this.initializeShapes()}updateBounds(t){this.config.bounds=t}destroy(){window.removeEventListener("mousemove",this.onMouseMove.bind(this)),window.removeEventListener("mouseup",this.onMouseUp.bind(this))}}const Gt=[{id:"circle1",type:"circle",attributes:{cx:300,cy:300,r:20,fill:"blue"},draggable:!0},{id:"rect1",type:"polygon",attributes:{points:"250,250 325,250 325,300 250,300",fill:"red"},draggable:!0}],Wt={x:200,y:200,width:400,height:400},Ht={svg:document.querySelector("svg"),shapes:Gt,bounds:Wt,mirrorLocation:"left-right"};new Vt(Ht);
